.TH "Context handling" 3 "Thu Apr 3 2014" "Acagamics Toolkit" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Context handling \- 
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBvoid\fP(* \fBGLFWglproc\fP )(\fBvoid\fP)"
.br
.RI "\fIClient API function pointer type\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBGLFWAPI\fP \fBvoid\fP \fBglfwMakeContextCurrent\fP (\fBGLFWwindow\fP *window)"
.br
.RI "\fIMakes the context of the specified window current for the calling thread\&. \fP"
.ti -1c
.RI "\fBGLFWAPI\fP \fBGLFWwindow\fP * \fBglfwGetCurrentContext\fP (\fBvoid\fP)"
.br
.RI "\fIReturns the window whose context is current on the calling thread\&. \fP"
.ti -1c
.RI "\fBGLFWAPI\fP \fBvoid\fP \fBglfwSwapBuffers\fP (\fBGLFWwindow\fP *window)"
.br
.RI "\fISwaps the front and back buffers of the specified window\&. \fP"
.ti -1c
.RI "\fBGLFWAPI\fP \fBvoid\fP \fBglfwSwapInterval\fP (\fBint\fP interval)"
.br
.RI "\fISets the swap interval for the current context\&. \fP"
.ti -1c
.RI "\fBGLFWAPI\fP \fBint\fP \fBglfwExtensionSupported\fP (const char *extension)"
.br
.RI "\fIReturns whether the specified extension is available\&. \fP"
.ti -1c
.RI "\fBGLFWAPI\fP \fBGLFWglproc\fP \fBglfwGetProcAddress\fP (const char *procname)"
.br
.RI "\fIReturns the address of the specified function for the current context\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SH "Typedef Documentation"
.PP 
.SS "typedef \fBvoid\fP(* GLFWglproc)(\fBvoid\fP)"

.PP
Client API function pointer type\&. Generic function pointer used for returning client API function pointers without forcing a cast from a regular pointer\&. 
.PP
Definition at line 558 of file glfw3\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBGLFWAPI\fP \fBint\fP glfwExtensionSupported (const char *extension)"

.PP
Returns whether the specified extension is available\&. This function returns whether the specified \fBOpenGL or context creation API extension\fP is supported by the current context\&. For example, on Windows both the OpenGL and WGL extension strings are checked\&.
.PP
\fBParameters:\fP
.RS 4
\fIextension\fP The ASCII encoded name of the extension\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
\fCGL_TRUE\fP if the extension is available, or \fCGL_FALSE\fP otherwise\&.
.RE
.PP
\fBRemarks:\fP
.RS 4
This function may be called from secondary threads\&.
.RE
.PP
\fBNote:\fP
.RS 4
As this functions searches one or more extension strings on each call, it is recommended that you cache its results if it's going to be used frequently\&. The extension strings will not change during the lifetime of a context, so there is no danger in doing this\&. 
.RE
.PP

.SS "\fBGLFWAPI\fP \fBGLFWwindow\fP* glfwGetCurrentContext (\fBvoid\fP)"

.PP
Returns the window whose context is current on the calling thread\&. This function returns the window whose context is current on the calling thread\&.
.PP
\fBReturns:\fP
.RS 4
The window whose context is current, or \fCNULL\fP if no window's context is current\&.
.RE
.PP
\fBRemarks:\fP
.RS 4
This function may be called from secondary threads\&.
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBglfwMakeContextCurrent\fP 
.RE
.PP

.SS "\fBGLFWAPI\fP \fBGLFWglproc\fP glfwGetProcAddress (const char *procname)"

.PP
Returns the address of the specified function for the current context\&. This function returns the address of the specified \fBclient API or extension function\fP, if it is supported by the current context\&.
.PP
\fBParameters:\fP
.RS 4
\fIprocname\fP The ASCII encoded name of the function\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The address of the function, or \fCNULL\fP if the function is unavailable\&.
.RE
.PP
\fBRemarks:\fP
.RS 4
This function may be called from secondary threads\&.
.RE
.PP
\fBNote:\fP
.RS 4
The addresses of these functions are not guaranteed to be the same for all contexts, especially if they use different client APIs or even different context creation hints\&. 
.RE
.PP

.SS "\fBGLFWAPI\fP \fBvoid\fP glfwMakeContextCurrent (\fBGLFWwindow\fP *window)"

.PP
Makes the context of the specified window current for the calling thread\&. This function makes the context of the specified window current on the calling thread\&. A context can only be made current on a single thread at a time and each thread can have only a single current context at a time\&.
.PP
\fBParameters:\fP
.RS 4
\fIwindow\fP The window whose context to make current, or \fCNULL\fP to detach the current context\&.
.RE
.PP
\fBRemarks:\fP
.RS 4
This function may be called from secondary threads\&.
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBglfwGetCurrentContext\fP 
.RE
.PP

.SS "\fBGLFWAPI\fP \fBvoid\fP glfwSwapBuffers (\fBGLFWwindow\fP *window)"

.PP
Swaps the front and back buffers of the specified window\&. This function swaps the front and back buffers of the specified window\&. If the swap interval is greater than zero, the GPU driver waits the specified number of screen updates before swapping the buffers\&.
.PP
\fBParameters:\fP
.RS 4
\fIwindow\fP The window whose buffers to swap\&.
.RE
.PP
\fBRemarks:\fP
.RS 4
This function may be called from secondary threads\&.
.RE
.PP
\fBNew in GLFW 3\fP
.RS 4
This function no longer calls \fBglfwPollEvents\fP\&. You need to call it or \fBglfwWaitEvents\fP yourself\&.
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBglfwSwapInterval\fP 
.RE
.PP

.SS "\fBGLFWAPI\fP \fBvoid\fP glfwSwapInterval (\fBint\fPinterval)"

.PP
Sets the swap interval for the current context\&. This function sets the swap interval for the current context, i\&.e\&. the number of screen updates to wait before swapping the buffers of a window and returning from \fBglfwSwapBuffers\fP\&. This is sometimes called 'vertical synchronization', 'vertical retrace synchronization' or 'vsync'\&.
.PP
Contexts that support either of the \fCWGL_EXT_swap_control_tear\fP and \fCGLX_EXT_swap_control_tear\fP extensions also accept negative swap intervals, which allow the driver to swap even if a frame arrives a little bit late\&. You can check for the presence of these extensions using \fBglfwExtensionSupported\fP\&. For more information about swap tearing, see the extension specifications\&.
.PP
\fBParameters:\fP
.RS 4
\fIinterval\fP The minimum number of screen updates to wait for until the buffers are swapped by \fBglfwSwapBuffers\fP\&.
.RE
.PP
\fBRemarks:\fP
.RS 4
This function may be called from secondary threads\&.
.RE
.PP
\fBNote:\fP
.RS 4
Some GPU drivers do not honor the requested swap interval, either because of user settings that override the request or due to bugs in the driver\&.
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBglfwSwapBuffers\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Acagamics Toolkit from the source code\&.
